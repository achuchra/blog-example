{"version":3,"sources":["utils/endpoints.ts","utils/httpClient.ts","store/actions/userActions.ts","store/actions/articleActions.ts","utils/parseDate.ts","pages/Home.tsx","routes/index.tsx","store/actionTypes.ts","store/reducers/articleReducer.ts","store/reducers/userReducer.ts","store/reducers/drawerReducer.ts","store/reducers/index.ts","store/index.ts","store/actions/drawerActions.ts","components/Header.tsx","components/Nav.tsx","components/Sidebar.tsx","templates/MainTemplate.tsx","themes/mainTheme.tsx","App.tsx","index.tsx"],"names":["ENDPOINTS","headers","httpRequest","endpoint","method","body","a","config","fetch","JSON","stringify","res","httpMiddleware","json","console","log","GET_CURRENT","GET_ARTICLES","http","GET_ARTICLE","ADD_ARTICLE","UPDATE_ARTICLE","DELETE_ARTICLE","USER_LOGIN","USER_UPDATE","USER_LOGOUT","USER_REGISTER","page","getCurrentUserAsync","fetchedUser","type","payload","setFetchingArticles","setFetching","getArticlesAsync","articles","setFetchingError","parseDate","date","parsedString","Date","year","getFullYear","month","getMonth","day","getDate","Home","query","useLocation","URLSearchParams","search","get","dispatch","useDispatch","state","useSelector","useEffect","then","catch","getArticles","articlesData","Grid","List","docs","map","item","ListItem","button","ListItemText","primary","title","secondary","createdAt","id","fetchingError","Routing","currentUser","err","loggedUser","exact","path","component","to","FETCHING_ARTICLES","FETCHING_ERROR","GET_CURRENT_USER","TOGGLE_DRAWER","initialState","fetchingArticles","open","rootReducer","combineReducers","action","actionTypes","drawer","composeEnhancers","window","compose","store","createStore","applyMiddleware","thunk","toggleDrawer","useStyles","makeStyles","theme","createStyles","root","display","flexDirection","justifyContent","alignItems","padding","breakpoints","up","toRight","marginLeft","marginRight","Header","classes","AppBar","color","className","Button","onClick","Typography","variant","Nav","pathname","checkLocation","useMemo","home","dashboard","settings","login","MenuList","MenuItem","NavLink","selected","Divider","Sidebar","drawerStatus","Drawer","onClose","MainTemplate","children","createMuiTheme","palette","common","black","white","grey","background","paper","default","main","light","dark","contrastText","error","text","disabled","hint","App","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af873489.chunk.js","sourcesContent":["export enum ENDPOINTS {\n  GET_CURRENT = '/api/users/current',\n  GET_ARTICLES = '/api/articles',\n  GET_ARTICLE = '/api/articles/',\n  ADD_ARTICLE = '/api/articles',\n  UPDATE_ARTICLE = '/api/articles/',\n  DELETE_ARTICLE = '/api/articles/',\n  USER_LOGIN = '/api/user/login',\n  USER_UPDATE = '/api/user/update/',\n  USER_LOGOUT = '/api/user/logout',\n  USER_REGISTER = '/api/user/register',\n}\n\n//const with type Values with one of the values from ENDPOINTS properties\n\n// export const ENDPOINTS = {\n//   GET_CURRENT: '/api/user/current',\n//   GET_ARTICLES: '/api/articles',\n//   GET_ARTICLE: '/api/articles/',\n//   ADD_ARTICLE: '/api/articles',\n//   UPDATE_ARTICLE: '/api/articles/',\n//   DELETE_ARTICLE: '/api/articles/',\n//   USER_LOGIN: '/api/user/login',\n//   USER_UPDATE: '/api/user/update/',\n//   USER_LOGOUT: '/api/user/logout',\n//   USER_REGISTER: '/api/user/register',\n// } as const;\n\n// type Keys = keyof typeof ENDPOINTS;\n// type Values = typeof ENDPOINTS[Keys];\n","import { ENDPOINTS } from './endpoints';\n\ninterface DefaultHeaders extends Record<string, string> {\n  'Content-Type': string;\n}\n\nconst headers: DefaultHeaders = {\n  'Content-Type': 'application/json',\n};\n\nconst httpRequest = async (\n  endpoint: string,\n  method: string,\n  body?: IPossibleArgs,\n  config: DefaultHeaders = headers,\n) => {\n  const res = await fetch(endpoint, {\n    method,\n    body: body ? JSON.stringify(body) : null,\n    headers: config || headers,\n  });\n  return res;\n};\n\nexport default httpRequest;\n\nconst httpMiddleware: IHttpRequest = async (...params) => {\n  try {\n    const res = await httpRequest(...params);\n    return res.json();\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n};\n\nconst {\n  GET_CURRENT,\n  GET_ARTICLES,\n  GET_ARTICLE,\n  ADD_ARTICLE,\n  UPDATE_ARTICLE,\n  DELETE_ARTICLE,\n  USER_LOGIN,\n  USER_UPDATE,\n  USER_LOGOUT,\n  USER_REGISTER,\n} = ENDPOINTS;\n\nexport const http: Http = {\n  getCurrent: () => httpMiddleware(GET_CURRENT, 'GET'),\n  getArticles: (page = 1) => httpMiddleware(`${GET_ARTICLES}?page=${page}`, 'GET'),\n  getArticle: (id) => httpMiddleware(GET_ARTICLE + id, 'GET'),\n  addArticle: (body) => httpMiddleware(ADD_ARTICLE, 'POST', body),\n  updateArticle: (id, body) => httpMiddleware(`${UPDATE_ARTICLE}${id}`, 'PUT', body),\n  deleteArticle: (id) => httpMiddleware(`${DELETE_ARTICLE}${id}`, 'DELETE'),\n  userLogin: (body) => httpMiddleware(USER_LOGIN, 'POST', body),\n  userUpdate: (id, body) => httpMiddleware(`${USER_UPDATE}${id}`, 'PUT', body),\n  userLogout: () => httpMiddleware(USER_LOGOUT, 'GET'),\n  userRegister: (body) => httpMiddleware(USER_REGISTER, 'POST', body),\n};\n","import { http } from '../../utils/httpClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\ntype TThunkAction = ThunkAction<Promise<void>, null, null, AnyAction>;\ntype TThunkDispatch = ThunkDispatch<null, null, AnyAction>;\n\nexport const getCurrentUserAsync = (fetchedUser: IFetchedCurrentUser | Record<string, unknown>): IGetCurrentUser => {\n  return { type: 'GET_CURRENT_USER', payload: fetchedUser };\n};\n\nexport const getCurrentUser = (): TThunkAction => {\n  return async (dispatch: TThunkDispatch): Promise<void> => {\n    http\n      .getCurrent()\n      .then((res: IFetchedCurrentUser): void => {\n        const fetchedUser = res.currentUser ? res : {};\n        dispatch(getCurrentUserAsync(fetchedUser));\n      })\n      .catch((err: any): void => {\n        console.log(err);\n      });\n  };\n};\n","import { http } from '../../utils/httpClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\ntype TThunkAction = ThunkAction<Promise<void>, null, null, AnyAction>;\ntype TThunkDispatch = ThunkDispatch<null, null, AnyAction>;\n\nexport const setFetchingArticles = (setFetching: boolean): ISetFetchingArticles => {\n  return { type: 'FETCHING_ARTICLES', payload: setFetching };\n};\n\nexport const getArticlesAsync = (articles: IFetchedArticles): IGetArticlesAction => {\n  return { type: 'GET_ARTICLES', payload: articles };\n};\n\nexport const setFetchingError = (setFetchingError: boolean): IFetchingError => {\n  return { type: 'FETCHING_ERROR', payload: setFetchingError };\n};\n\nexport const getArticles = (page: number | string | null = 1): TThunkAction => {\n  return async (dispatch: TThunkDispatch): Promise<void> => {\n    dispatch(setFetchingArticles(true));\n    http\n      .getArticles(page)\n      .then((res: IFetchedArticles): void => {\n        const articles = res;\n        dispatch(getArticlesAsync(articles));\n      })\n      .catch((): void => {\n        dispatch(setFetchingError(true));\n      });\n  };\n};\n","export const parseDate = (date: Date | string): string => {\n  const parsedString: Date = new Date(date);\n  const year = parsedString.getFullYear();\n  const month = parsedString.getMonth();\n  const day = parsedString.getDate();\n\n  return `${year}-${month}-${day}`;\n};\n","import React, { ReactElement, FC, useEffect, ReactNode } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getArticles } from '../store/actions/articleActions';\nimport { RootState } from '../store/reducers';\nimport { List, ListItem, ListItemText, Grid } from '@material-ui/core';\nimport { parseDate } from '../utils/parseDate';\n\nconst Home: FC = (): ReactElement => {\n  const query = useLocation();\n  const queryParams = new URLSearchParams(query.search);\n  const page = queryParams.get('page') || 1;\n\n  const dispatch = useDispatch();\n  const state = useSelector((state: RootState) => state);\n  console.log(state);\n  useEffect(() => {\n    dispatch(getArticles(page));\n  }, []);\n\n  const singleItem = (item: IFetchedArticle) => {\n    return (\n      <ListItem key={item.id} button>\n        <ListItemText primary={item.title} secondary={parseDate(item.createdAt)}></ListItemText>\n      </ListItem>\n    );\n  };\n\n  return (\n    <div>\n      {state.articlesData.articles ? (\n        <Grid>\n          <List>{state.articlesData.articles.docs.map(singleItem)}</List>\n        </Grid>\n      ) : state.articlesData.fetchingError ? (\n        <p>Fetching failed :(</p>\n      ) : (\n        <p>Fetching...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { ReactElement, useEffect } from 'react';\nimport { RootState } from '../store/reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCurrentUser } from '../store/actions/userActions';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Home from '../pages/Home';\n\nconst Routing: React.FC = (): ReactElement => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, []);\n\n  const currentUser = useSelector((state: RootState) => state.currentUser);\n  const loggedUser = 'currentUser' in currentUser.currentUser;\n  console.log(loggedUser);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home}></Route>\n      <Route path=\"/dashboard\">{loggedUser ? '<Dashboard />' : <Redirect to=\"/login\" />}</Route>\n      <Route path=\"/settings\">{loggedUser ? '<Settings />' : <Redirect to=\"/login\" />}</Route>\n      <Route path=\"/login\">{loggedUser ? <Redirect to=\"/settings\" /> : '<Login />'}</Route>\n    </Switch>\n  );\n};\n\nexport default Routing;\n","export const FETCHING_ARTICLES = 'FETCHING_ARTICLES';\nexport const FETCHING_ERROR = 'FETCHING_ERROR';\nexport const GET_ARTICLES = 'GET_ARTICLES';\nexport const ADD_ARTICLE = 'ADD_ARTICLE';\nexport const REMOVE_ARTICLE = 'REMOVE_ARTICLE';\nexport const UPDATE_ARTICLE = 'UPDATE_ARTICLE';\n\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\n\nexport const TOGGLE_DRAWER = 'TOGGLE_DRAWER';\n","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  articles: null,\n  fetchingArticles: false,\n  fetchingError: false,\n};\n\nexport const articleReducer = (state: IState = initialState, action: TAction): IState => {\n  switch (action.type) {\n    case actionTypes.GET_ARTICLES:\n      return {\n        ...state,\n        articles: action.payload,\n        fetchingArticles: false,\n      };\n    case actionTypes.FETCHING_ARTICLES:\n      return {\n        ...state,\n        fetchingArticles: action.payload,\n      };\n    case actionTypes.FETCHING_ERROR:\n      return {\n        ...state,\n        fetchingError: true,\n        fetchingArticles: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  currentUser: {},\n};\n\nexport const userReducer = (state: IUserState = initialState, action: TAction): IUserState => {\n  switch (action.type) {\n    case actionTypes.GET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n    default:\n      return { ...state };\n  }\n};\n","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  open: false,\n};\n\nexport const drawerReducer = (state: IDrawerState = initialState, action: TAction): IDrawerState => {\n  switch (action.type) {\n    case actionTypes.TOGGLE_DRAWER:\n      return {\n        ...state,\n        open: action.payload,\n      };\n    default:\n      return { ...state };\n  }\n};\n","import { combineReducers } from 'redux';\nimport { articleReducer } from './articleReducer';\nimport { userReducer } from './userReducer';\nimport { drawerReducer } from './drawerReducer';\n\nexport const rootReducer = combineReducers({\n  articlesData: articleReducer,\n  currentUser: userReducer,\n  drawer: drawerReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\n\nexport const store = createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  composeEnhancers(applyMiddleware(thunk)),\n);\n","export const toggleDrawer = (toggleDrawer: boolean): IToggleDrawer => {\n  return { type: 'TOGGLE_DRAWER', payload: toggleDrawer };\n};\n","import React, { ReactElement } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleDrawer } from '../store/actions/drawerActions';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      padding: '5px 15px',\n      [theme.breakpoints.up('sm')]: {\n        padding: '10px 30px 10px 5px',\n      },\n    },\n    toRight: {\n      marginLeft: 'auto',\n      marginRight: '10px',\n    },\n  });\n});\n\nconst Header: React.FC = (): ReactElement => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  return (\n    <>\n      <AppBar color=\"secondary\" className={classes.root}>\n        <Button color=\"primary\" onClick={() => dispatch(toggleDrawer(true))}>\n          <MenuIcon />\n        </Button>\n        <BookOutlinedIcon className={classes.toRight} />\n        <Typography variant=\"h5\">Blog app</Typography>\n      </AppBar>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { ReactElement, useMemo } from 'react';\nimport { RootState } from '../store/reducers';\nimport { useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MenuList, MenuItem, Typography, Divider } from '@material-ui/core';\n\nconst Nav: React.FC = (): ReactElement => {\n  const currentUser = useSelector((state: RootState) => state.currentUser);\n  const loggedUser = 'currentUser' in currentUser.currentUser;\n  const { pathname } = useLocation();\n  const checkLocation = useMemo(() => (path: string): boolean => pathname === path, [pathname]);\n\n  const paths = {\n    home: '/',\n    dashboard: '/dashboard',\n    settings: '/settings',\n    login: '/login',\n  };\n  const { home, dashboard, settings, login } = paths;\n\n  return (\n    <MenuList>\n      <MenuItem component={NavLink} to={home} selected={checkLocation(home)}>\n        <Typography variant=\"body1\">Home</Typography>\n      </MenuItem>\n      <Divider />\n      <MenuItem component={NavLink} to={dashboard} selected={checkLocation(dashboard)}>\n        <Typography variant=\"body1\">dashboard</Typography>\n      </MenuItem>\n      <Divider />\n      {loggedUser ? (\n        <MenuItem component={NavLink} to={settings} selected={checkLocation(settings)}>\n          <Typography variant=\"body1\">settings</Typography>\n        </MenuItem>\n      ) : null}\n      {loggedUser ? <Divider /> : null}\n      {loggedUser ? null : (\n        <MenuItem component={NavLink} to={login} selected={checkLocation(login)}>\n          <Typography variant=\"body1\">login</Typography>\n        </MenuItem>\n      )}\n    </MenuList>\n  );\n};\n\nexport default Nav;\n","import React, { ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers';\nimport { toggleDrawer } from '../store/actions/drawerActions';\nimport Drawer from '@material-ui/core/Drawer';\nimport Nav from './Nav';\n\nconst Sidebar: React.FC = (): ReactElement => {\n  const dispatch = useDispatch();\n  const drawerStatus = useSelector((state: RootState) => state.drawer.open);\n\n  return (\n    <Drawer open={drawerStatus} onClose={() => dispatch(toggleDrawer(false))}>\n      <Nav />\n    </Drawer>\n  );\n};\n\nexport default Sidebar;\n","import React, { ReactElement } from 'react';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\n\ntype props = Record<string, unknown>;\n\nconst MainTemplate: React.FC<props> = ({ children }): ReactElement => {\n  console.log(Sidebar);\n  console.log(Header);\n  return (\n    <>\n      <Header />\n      <Sidebar />\n      {children}\n    </>\n  );\n};\n\nexport default MainTemplate;\n","import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff',\n      grey: '#eee',\n    },\n    background: {\n      paper: '#fff',\n      default: '#fafafa',\n      main: '#f5f5f5',\n    },\n    primary: {\n      light: '#ff8e8a',\n      main: '#ff7d79',\n      dark: '#ee5c68',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#8272a4',\n      main: '#716193',\n      dark: '#605082',\n      contrastText: '#fff',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff',\n    },\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n      hint: 'rgba(0, 0, 0, 0.38)',\n    },\n  },\n} as ThemeOptions);\n\nexport default theme;\n","import React, { ReactElement } from 'react';\nimport Routing from './routes';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport MainTemplate from './templates/MainTemplate';\nimport { ThemeProvider } from '@material-ui/core';\nimport theme from './themes/mainTheme';\n\nconst App: React.FC = (): ReactElement => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <MainTemplate>\n            <Routing />\n          </MainTemplate>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}